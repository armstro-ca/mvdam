name: Compile EXE binary

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest, 'macos-latest']

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      
      - name: Build EXE
      - run: pyinstaller main.py \
          --distpath dist \
          --workpath build \
          --onefile \
          --icon=facicon-32x32.ico \
          --name mvdam.exe \
          --noconfirm \
          --clean

      # Optionally verify that it works (provided that it does not need user interaction)
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*
